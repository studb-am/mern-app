{"version":3,"file":"static/js/122.d8f6ce38.chunk.js","mappings":"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","sources":["assets/custom-hooks.js","assets/validators.js","components/alerts/alert-error.component.jsx","components/mapModals/mapLocationPicker.component.jsx","components/form/form.component.jsx","components/imagePicker/imagePicker.component.js","components/mapModals/mapModal.styles.js","pages/newPlace/newPlace.component.jsx"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\n\nlet activeHttpRequests;\n\nconst getAllActiveHttpRequests = () => activeHttpRequests.current;\nconst useStartActiveRequestsArray = () => {\n    activeHttpRequests = useRef([]);\n}\nconst resetActiveRequestsArray = () => activeHttpRequests.current = [];\nconst addActiveHttpRequests = (currentRequest) => {\n    activeHttpRequests.current.push(currentRequest);\n}\nconst removeCurrentRequest = (currentRequest) => {\n    activeHttpRequests.current = activeHttpRequests.current.filter(\n        reqCtrl => reqCtrl !== currentRequest\n    );\n}\n\n//definisco la funzione da richiamare all'interno delle funzioni di export\nconst fetchBase = async (state) => {\n\n    const { setLoading, setError, url, method, headers, body } = state;\n\n    try {\n        setLoading(true);\n        const httpAbortCtrl = new AbortController();\n        addActiveHttpRequests(httpAbortCtrl);\n\n        const response = await fetch(url, {\n            method: method,\n            headers: headers,\n            body: body\n        });\n        const data = await response.json();\n       \n\n        if (!response.ok) {\n            const newErr = new Error(data.message || 'An unexpected error occured. Please try again later!');\n            setError(newErr);\n            throw newErr;\n        }\n        removeCurrentRequest(httpAbortCtrl);\n        return data;\n    } catch (err) {\n        setError(err);\n        throw err;\n    } finally {\n        setLoading(false);\n    }\n}\n\nexport const useFetchData = (url, body=null, method = 'GET', headers = {}) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState(null);\n\n    useStartActiveRequestsArray();\n\n    const clearError = () => {\n        setError(null);\n    }\n\n    const fetchRequest = useCallback(() => fetchBase({ setLoading, setError, url, method, headers, body }), []);\n\n    useEffect(() => {\n        fetchRequest()\n            .then(currData => setData(currData));\n    }, [fetchRequest]);\n\n    useEffect(() => {\n        return () => {\n            getAllActiveHttpRequests().forEach(abortCtrl => abortCtrl.abort());\n            resetActiveRequestsArray();\n        }\n    }, []);\n\n    return { data, loading, error, clearError };\n}\n\nexport const useMutateData = (headers = { 'Content-Type': 'application/json' }) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useStartActiveRequestsArray();\n\n    const clearError = () => {\n        setError(null);\n    }\n\n    const mutateData = useCallback((variables, method='POST') => fetchBase({ setLoading, setError, method, headers, ...variables }), []);\n    \n    useEffect(() => {\n        return () => {\n            getAllActiveHttpRequests().forEach(abortCtrl => abortCtrl.abort());\n            resetActiveRequestsArray();\n        }\n    }, []);\n\n    return [mutateData, { loading, error, clearError }];\n\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React from 'react';\nimport { Alert, AlertTitle } from '@mui/material';\n\nconst AlertError = props => {\n    const { error, onClose } = props;\n\n    return <Alert severity=\"error\" onClose={onClose}>\n        <AlertTitle>Error</AlertTitle>\n        {error.message}\n    </Alert>\n}\n\nexport default AlertError;","import React, { useState } from \"react\";\nimport {\n    Modal as MuiModal,\n    CardContent,\n    Box,\n    Button,\n} from '@mui/material';\n\nimport { StyledCard, StyledCardHeader } from './mapModal.styles';\nimport { Map, Marker } from 'open-map-gl';\n\nimport './mapModal.css';\n\n\nconst MapLocationPicker = props => {\n\n    const { open, onClose, title, onLocationChange } = props;\n    const [currLoc, setCurrLoc] = useState(null);\n\n\n    return <MuiModal open={open} onClose={onClose}>\n        <StyledCard>\n            <StyledCardHeader title={title} />\n            <CardContent sx={{ height: '95%' }}>\n                <Map\n                    centerCoords={{ lat: 44.8336, lng: 7.7610 }}\n                    initialZoom={14}\n                    mapStyle={process.env.REACT_APP_MAP_STYLE}\n                    mapClassName=\"map\"\n                    mapContainerClassName=\"map-wrap\"\n                    minZoom={9}\n                    maxZoom={18}\n                    navigationControl=\"top-right\"\n                    onClick={evt => {\n                        setCurrLoc(evt.lngLat)\n                    }}\n                >\n                    {currLoc && <Marker\n                        coords={{ lat: currLoc.lat, lng: currLoc.lng }}\n                        options={{\n                            color: '#3FB1CE',\n                            draggable: false\n                        }}\n                    />}\n                </Map>\n                <Box padding={3} textAlign=\"center\">\n                    <Button variant=\"contained\" disabled={!currLoc} onClick={() => {\n                        onLocationChange(currLoc);\n                        onClose();\n                    }}>Save</Button>\n                    <Button variant=\"outlined\" onClick={onClose}>Cancel</Button>\n                </Box>\n            </CardContent>\n        </StyledCard>\n    </MuiModal>\n}\n\nexport default MapLocationPicker;","import React, { useState, useReducer, useContext } from 'react';\nimport { Box, TextField, Typography, Button, Stack } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nimport './form.css';\n\nimport {\n  validate,\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../assets/validators';\n\nimport MapLocationPicker from '../mapModals/mapLocationPicker.component';\nimport AlertError from '../alerts/alert-error.component';\nimport { AuthContext } from '../../pages/auth/auth.context';\nimport ImagePicker from '../imagePicker/imagePicker.component';\nimport { useMutateData } from '../../assets/custom-hooks';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'ON_CHANGE':\n      let formIsValid = true;\n      let currentIsValid = false;\n      if (action.inputId === 'location') {\n        if (action.val && action.val.lat && action.val.lng) {\n          currentIsValid = true;\n        }\n      } else if (action.inputId === 'imageUrl' && action.val) {\n        currentIsValid = true;\n      } else {\n        currentIsValid = validate(action.val, action.validators);\n      }\n      for (const inputId in state) {\n        if (inputId !== 'meta') {\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && currentIsValid;\n          } else {\n            formIsValid = formIsValid && state[inputId].isValid;\n          }\n        }\n      }\n      return {\n        ...state,\n        [action.inputId]: {\n          value: action.val,\n          hasBeenFocued: true,\n          isValid: currentIsValid,\n        },\n        meta: {\n          ...state.meta,\n          isValid: formIsValid\n        }\n\n      };\n    default:\n      return state;\n  }\n};\n\nconst Form = props => {\n\n  const { initialState, action } = props\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  const auth = useContext(AuthContext);\n  const [isMapOpen, setIsMapOpen] = useState(false);\n\n  const [mutateData, { error, clearError }] = useMutateData();\n  const navigateTo = useNavigate();\n\n  const formHandler = event => {\n\n    event.preventDefault();\n    const formData = new FormData();\n\n    if (action === 'new-place') {\n\n      formData.append('title', state.title.value);\n      formData.append('description', state.description.value);\n      formData.append('imageUrl', state.imageUrl.value);\n      formData.append('coordinates', JSON.stringify(state.location.value));\n      formData.append('creator', auth.userId);\n\n      mutateData({\n        url: 'http://locomovolt.com:4000/api/places',\n        body: formData,\n        headers: {\n          Authorization: `Bearer ${auth.token}`\n        }\n      })\n        .then(data => {\n          console.log('Data successfully inserted');\n          navigateTo('/');\n        });\n\n    } else {\n      mutateData({\n        url: `http://locomovolt.com:4000/api/places/place/${state.meta.placeId}`,\n        body: JSON.stringify({\n          title: state.title.value,\n          description: state.description.value\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${auth.token}`\n        }\n      }, 'PATCH')\n        .then(data => {\n          console.log('Successfully updated!');\n          navigateTo(`/places/user/${auth.userId}`);\n        })\n    }\n  }\n\n\n  return (\n    <div className=\"formContainer\">\n      {error && <AlertError error={error} onClose={clearError} />}\n      <Typography variant=\"h6\" sx={{ padding: 3 }}>\n        {action === \"new-place\" ? \"Insert information to add a new place\" : \"Edit information of the existing place\"}\n      </Typography>\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': {\n            m: 1,\n            width: '80%',\n            marginLeft: '10%',\n            height: '5%',\n          },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"title\"\n          label=\"Title\"\n          fullWidth\n          error={!state.title.isValid && state.title.hasBeenFocused}\n          helperText={\n            !state.title.isValid &&\n            state.title.hasBeenFocued &&\n            'Title must not be empty!'\n          }\n          value={state.title.value}\n          onChange={evt =>\n            dispatch({\n              type: 'ON_CHANGE',\n              val: evt.target.value,\n              inputId: 'title',\n              validators: [VALIDATOR_REQUIRE()],\n            })}\n        />\n        <TextField\n          id=\"description\"\n          label=\"Description\"\n          multiline\n          rows={4}\n          fullWidth\n          error={!state.description.isValid && state.description.hasBeenFocused}\n          helperText={\n            !state.description.isValid &&\n            state.description.hasBeenFocued &&\n            'Please provide a description with at least 5 characters!'\n          }\n          value={state.description.value}\n          onChange={evt =>\n            dispatch({\n              type: 'ON_CHANGE',\n              val: evt.target.value,\n              inputId: 'description',\n              validators: [VALIDATOR_MINLENGTH(5)],\n            })}\n        />\n        {action === 'new-place' && <Stack\n          direction=\"column\"\n          sx={{ m: 1, justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n          <ImagePicker id=\"image\" center onInputLoad={(file) => {\n            console.log(file);\n            dispatch({\n              type: 'ON_CHANGE',\n              inputId: 'imageUrl',\n              val: file,\n              validators: []\n            })\n          }} />\n        </Stack>}\n        {action === 'new-place' && <Stack direction=\"row\" spacing={10} sx={{ marginTop: '2%', alignItems: 'center', marginLeft: '10%' }}>\n          <Button\n            variant=\"text\"\n            onClick={() => setIsMapOpen(true)}\n          >Pick up the location\n          </Button>\n          {state.location.value && <p>LATITUDE: {state.location.value.lat}; LONGITUDE: {state.location.value.lng} </p>}\n        </Stack>}\n        <Button\n          variant=\"contained\"\n          disabled={!state.meta.isValid}\n          sx={{ marginLeft: '41%', marginRight: '30%', marginTop: '3%' }}\n          onClick={formHandler}\n        >\n          {action === 'new-place' ? \"Add new place\" : \"Save changes\"}\n        </Button>\n      </Box>\n      <MapLocationPicker\n        open={isMapOpen}\n        onClose={() => setIsMapOpen(false)}\n        title={state.title.value}\n        onLocationChange={currLoc => {\n          dispatch({\n            type: 'ON_CHANGE',\n            val: currLoc,\n            inputId: 'location',\n            validators: []\n          })\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Button } from '@mui/material';\n\nimport './imagePicker.css';\n\nconst ImagePicker = props => {\n\n    const { id, onInputLoad } = props;\n\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n\n    const imageInputRef = useRef();\n\n    useEffect(() => {\n        if (!file) {\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        }\n        fileReader.readAsDataURL(file);\n    }, [file])\n\n    const changeFile = evt => {\n        let pickedFile;\n        if (evt.target.files && evt.target.files.length === 1) {\n            pickedFile = evt.target.files[0];\n            setFile(pickedFile);\n        } else {}\n        onInputLoad(pickedFile);\n    }\n\n    const pickImage = () => {\n        imageInputRef.current.click();\n    }\n\n    return <div>\n        <input\n            id={id}\n            ref={imageInputRef}\n            style={{ display: 'none' }}\n            type=\"file\"\n            accept=\".jpg,.png,.jpeg\"\n            onChange={changeFile}\n        />\n        <div className={`image-upload ${props.center && 'center'}`}>\n            <div className=\"image-upload__preview\">\n                {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n                {!previewUrl && <p>Please pick an image.</p>}\n            </div>\n            <Button variant=\"outlined\" onClick={pickImage}>\n                Pick Image\n            </Button>\n        </div>\n\n    </div>\n}\n\nexport default ImagePicker;","import { styled } from \"@mui/material/styles\";\nimport { Card, CardHeader } from \"@mui/material\";\n\nimport { theme } from '../../assets/util';\n\nexport const StyledCard = styled(Card)`\n    width: 90%;\n    height: 60%;\n    margin-left: 5%;\n    margin-top: 15%;\n    box-shadow: 24;\n`;\n\nexport const StyledCardHeader = styled(CardHeader)`\n    background-color: ${theme.palette.primary.main};\n    color: ${theme.palette.neutral.main};\n    height: 5%;\n`;","import React from 'react';\n\nimport Form from '../../components/form/form.component';\n\nconst initialState = {\n  title: {\n    value: '',\n    hasBeenFocused: false,\n    isValid: false,\n  },\n  description: {\n    value: '',\n    hasBeenFocused: false,\n    isValid: false,\n  },\n  location: {\n    value: null,\n    isValid: false\n  },\n  imageUrl: {\n    value: null,\n    isValid: false\n  },\n  meta: {\n    isValid: false,\n  }\n};\n\nconst NewPlacePage = props => {\n  return <Form \n    initialState={initialState}\n    action=\"new-place\"\n  />\n};\n\nexport default NewPlacePage;\n"],"names":["activeHttpRequests","getAllActiveHttpRequests","current","useStartActiveRequestsArray","useRef","resetActiveRequestsArray","removeCurrentRequest","currentRequest","filter","reqCtrl","fetchBase","state","setLoading","setError","url","method","headers","body","httpAbortCtrl","AbortController","push","fetch","response","json","data","ok","newErr","Error","message","useFetchData","useState","loading","error","setData","clearError","fetchRequest","useCallback","useEffect","then","currData","forEach","abortCtrl","abort","useMutateData","mutateData","variables","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","props","onClose","severity","open","title","onLocationChange","currLoc","setCurrLoc","CardContent","sx","height","centerCoords","lat","lng","initialZoom","mapStyle","process","mapClassName","mapContainerClassName","minZoom","maxZoom","navigationControl","onClick","evt","lngLat","coords","options","color","draggable","Box","padding","textAlign","Button","variant","disabled","formReducer","action","formIsValid","currentIsValid","inputId","hasBeenFocued","meta","initialState","useReducer","dispatch","auth","useContext","AuthContext","isMapOpen","setIsMapOpen","navigateTo","useNavigate","className","Typography","component","m","width","marginLeft","noValidate","autoComplete","TextField","id","label","fullWidth","hasBeenFocused","helperText","onChange","target","multiline","rows","description","Stack","direction","justifyContent","alignItems","center","onInputLoad","file","console","log","spacing","marginTop","location","marginRight","event","preventDefault","formData","FormData","append","imageUrl","JSON","stringify","userId","Authorization","token","placeId","setFile","previewUrl","setPreviewUrl","imageInputRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","files","src","alt","click","StyledCard","styled","Card","StyledCardHeader","CardHeader","theme"],"sourceRoot":""}