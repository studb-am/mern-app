{"version":3,"file":"static/js/15.62b2d953.chunk.js","mappings":"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","sources":["assets/custom-hooks.js","components/alerts/alert-error.component.jsx","components/alerts/loading.component.jsx","components/userItem/userItem.styles.js","components/userItem/userItem.component.jsx","pages/users/user.styles.js","pages/users/users.component.jsx","pages/users/users.container.jsx"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\n\nlet activeHttpRequests;\n\nconst getAllActiveHttpRequests = () => activeHttpRequests.current;\nconst useStartActiveRequestsArray = () => {\n    activeHttpRequests = useRef([]);\n}\nconst resetActiveRequestsArray = () => activeHttpRequests.current = [];\nconst addActiveHttpRequests = (currentRequest) => {\n    activeHttpRequests.current.push(currentRequest);\n}\nconst removeCurrentRequest = (currentRequest) => {\n    activeHttpRequests.current = activeHttpRequests.current.filter(\n        reqCtrl => reqCtrl !== currentRequest\n    );\n}\n\n//definisco la funzione da richiamare all'interno delle funzioni di export\nconst fetchBase = async (state) => {\n\n    const { setLoading, setError, url, method, headers, body } = state;\n\n    try {\n        setLoading(true);\n        const httpAbortCtrl = new AbortController();\n        addActiveHttpRequests(httpAbortCtrl);\n\n        const response = await fetch(url, {\n            method: method,\n            headers: headers,\n            body: body\n        });\n        const data = await response.json();\n       \n\n        if (!response.ok) {\n            const newErr = new Error(data.message || 'An unexpected error occured. Please try again later!');\n            setError(newErr);\n            throw newErr;\n        }\n        removeCurrentRequest(httpAbortCtrl);\n        return data;\n    } catch (err) {\n        setError(err);\n        throw err;\n    } finally {\n        setLoading(false);\n    }\n}\n\nexport const useFetchData = (url, body=null, method = 'GET', headers = {}) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState(null);\n\n    useStartActiveRequestsArray();\n\n    const clearError = () => {\n        setError(null);\n    }\n\n    const fetchRequest = useCallback(() => fetchBase({ setLoading, setError, url, method, headers, body }), []);\n\n    useEffect(() => {\n        fetchRequest()\n            .then(currData => setData(currData));\n    }, [fetchRequest]);\n\n    useEffect(() => {\n        return () => {\n            getAllActiveHttpRequests().forEach(abortCtrl => abortCtrl.abort());\n            resetActiveRequestsArray();\n        }\n    }, []);\n\n    return { data, loading, error, clearError };\n}\n\nexport const useMutateData = (headers = { 'Content-Type': 'application/json' }) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useStartActiveRequestsArray();\n\n    const clearError = () => {\n        setError(null);\n    }\n\n    const mutateData = useCallback((variables, method='POST') => fetchBase({ setLoading, setError, method, headers, ...variables }), []);\n    \n    useEffect(() => {\n        return () => {\n            getAllActiveHttpRequests().forEach(abortCtrl => abortCtrl.abort());\n            resetActiveRequestsArray();\n        }\n    }, []);\n\n    return [mutateData, { loading, error, clearError }];\n\n}","import React from 'react';\nimport { Alert, AlertTitle } from '@mui/material';\n\nconst AlertError = props => {\n    const { error, onClose } = props;\n\n    return <Alert severity=\"error\" onClose={onClose}>\n        <AlertTitle>Error</AlertTitle>\n        {error.message}\n    </Alert>\n}\n\nexport default AlertError;","import React from \"react\";\nimport { Backdrop, CircularProgress } from \"@mui/material\";\n\nconst Loading = props => {\n    const { loading } = props;\n\n    return <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={loading}\n    >     <CircularProgress color=\"inherit\" />\n    </Backdrop>\n}\n\nexport default Loading;","import { theme } from \"../../assets/util\";\n\nexport const cardStyle = {\n    width: 200,\n    marginBottom: 2,\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.light,\n    borderRadius: 5,\n    display: 'flex',\n    alignItems: 'center', \n    justifyContent:'space-between'\n}\n\nexport const avatarStyle = {\n    width: 45,\n    height: 45\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CardHeader, CardActionArea, Avatar, Card } from '@mui/material';\n\nimport { cardStyle, avatarStyle } from './userItem.styles';\n\nconst UserItem = props => {\n  const { user } = props;\n\n  return (\n    <Card variant=\"outlined\" sx={cardStyle} key={user._id}>\n      <Link to={`/places/user/${user._id}`} style={{ color: 'inherit', textDecoration: 'none' }}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<Avatar src={`${process.env.REACT_APP_HOST_API}${user.image}`} sx={avatarStyle} />}\n            title={user.name}\n            subheader={`places: ${user.places.length}`}\n            sx={{ width: 200 }}\n          />\n        </CardActionArea>\n      </Link>\n    </Card>\n  );\n};\n\nexport default UserItem;\n","export const gridContainerStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\n\nexport const gridStyle = {\n  maxWidth: 1200,\n  justifyContent: 'inherit',\n  alignItems: 'inherit',\n  paddingTop: 2,\n  paddingLeft: 10,\n  paddingRight: 10,\n}","import React from 'react';\nimport { Grid, Box, useMediaQuery } from '@mui/material';\n\nimport {\n  IS_MOBILE_MED_VIEW_DEF,\n  IS_MOBILE_SMALL_VIEW_DEF,\n} from '../../assets/util';\nimport UserItem from '../../components/userItem/userItem.component';\nimport { gridContainerStyle, gridStyle } from './user.styles';\n\nconst UsersPage = props => {\n  const { users } = props;\n  const isMobile = useMediaQuery(IS_MOBILE_SMALL_VIEW_DEF);\n  const isMobile2 = useMediaQuery(IS_MOBILE_MED_VIEW_DEF);\n\n  const gridDimensionByMedia = () => {\n    let dimension = 3; //dimensione da assegnare se viene superato IS_MOBILE_MED_VIEW_DEF\n    if (isMobile2) {\n      dimension = 6;\n    }\n    if (isMobile) {\n      dimension = 12;\n    }\n    return dimension;\n  };\n\n  return (\n    <Box sx={gridContainerStyle}>\n      <Grid container sx={gridStyle}>\n        {users.map(user => {\n          return (\n            <Grid item xs={gridDimensionByMedia()} key={user._id}>\n              <UserItem user={user} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default UsersPage;\n","import React from \"react\";\n\nimport UsersPage from \"./users.component\";\nimport AlertError from \"../../components/alerts/alert-error.component\";\nimport Loading from \"../../components/alerts/loading.component\";\n\nimport { useFetchData } from \"../../assets/custom-hooks\";\n\nconst UsersPageContainer = props => { \n\n    const { data, loading, error, clearError } = useFetchData('http://locomovolt.com:4000/api/users');\n\n    if (error) {\n        return <AlertError onClose={clearError} error={error} />\n    }\n\n    if (loading) {\n        return <Loading loading={loading} />\n    }\n\n    return data && <UsersPage {...props} users={data.users} />\n\n}\n\n/*\nimport { useFetch } from \"../../assets/custom-hooks\";\n\nconst UsersPageContainer = props => {\n\n    const [users, setUsers] = useState([]);\n    const {fetchRequest, loading, error, clearError} = useFetch();\n\n    useEffect(() => {\n        fetchRequest('http://locomovolt.com:4000/api/users')\n        .then(data => setUsers(data.users));\n    }, [fetchRequest]);\n\n    if (error) {\n        return <AlertError onClose={clearError} error={error} />\n    }\n\n    if (loading) {\n        return <Loading loading={loading} />\n    }\n\n    return <UsersPage {...props} users={users} />\n}\n*/\n\nexport default UsersPageContainer;\n"],"names":["activeHttpRequests","getAllActiveHttpRequests","current","useStartActiveRequestsArray","useRef","resetActiveRequestsArray","removeCurrentRequest","currentRequest","filter","reqCtrl","fetchBase","state","setLoading","setError","url","method","headers","body","httpAbortCtrl","AbortController","push","fetch","response","json","data","ok","newErr","Error","message","useFetchData","useState","loading","error","setData","clearError","fetchRequest","useCallback","useEffect","then","currData","forEach","abortCtrl","abort","useMutateData","mutateData","variables","props","onClose","severity","sx","color","zIndex","theme","drawer","open","cardStyle","width","marginBottom","backgroundColor","borderRadius","display","alignItems","justifyContent","avatarStyle","height","user","Card","variant","to","_id","style","textDecoration","CardActionArea","CardHeader","avatar","Avatar","src","process","image","title","name","subheader","places","length","gridContainerStyle","gridStyle","maxWidth","paddingTop","paddingLeft","paddingRight","users","isMobile","useMediaQuery","IS_MOBILE_SMALL_VIEW_DEF","isMobile2","IS_MOBILE_MED_VIEW_DEF","gridDimensionByMedia","dimension","Box","Grid","container","map","item","xs"],"sourceRoot":""}